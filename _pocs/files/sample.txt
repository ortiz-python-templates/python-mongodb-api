 
# docker/docker-compose.yml
version: "3.9"

services:

  # -----------------------
  # Database: PostgreSQL
  # -----------------------
  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - ../.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # -----------------------
  # Database: MongoDB
  # -----------------------
  mongodb:
    image: mongo:7
    container_name: mongodb
    env_file:
      - ../.env
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  # -----------------------
  # Cache: Redis
  # -----------------------
  redis:
    image: redis:7
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # -----------------------
  # Application: placeholder
  # -----------------------
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ${APP_NAME}
    env_file:
      - ../.env
    ports:
      - "${APP_PORT}:${APP_PORT}"   # Main API port
      - "8000:8000"                 # Prometheus metrics port
    depends_on:
      - mongodb
      - redis
      - jaeger
    networks:
      - backend-net

  # -----------------------
  # Tracing: Jaeger
  # -----------------------
  jaeger:
    image: jaegertracing/all-in-one:1.49
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16686/"]
      interval: 10s
      retries: 5
      timeout: 5s

  # -----------------------
  # Metrics: Prometheus
  # -----------------------
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend-net
    depends_on:
      - app

  # -----------------------
  # Dashboard: Grafana
  # -----------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - backend-net
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

# -----------------------
# Volumes & Networks
# -----------------------
volumes:
  mongodb_data:
  redis_data:

networks:
  backend-net:
